#include <bits/stdc++.h>
using namespace std;

vector<int> longestConsecutiveIncreasingSequence(int *arr, int n){
	
    
    unordered_set<int>s; 
    vector<int>r1;
    r1.push_back(arr[0]);
     
    for(int i=0;i<n;i++){
        s.insert(arr[i]);
    }
    if(n==1){
        vector<int>result;
        result.push_back(arr[0]);
        return result;
    }
   
    for (int i=0; i<n; i++) 
    { 
        
        if (m.find(arr[i]-1) == m.end()) 
        { 
            int j = arr[i]; 
            it = m.find(arr[i]);
            
            vector<int>r2;
            while (m.find(j) != m.end()){
                 r2.add(j);
                 j++; 
            }
  
                if(r2.size()>r1.size()){
                    for(int i=)
                }
                
        } 
    } 
    int init = arr2[first];
    for(int i=0;i<ans;i++){
        result.push_back(init+i);
    }
    return result; 
    
}